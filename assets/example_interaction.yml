# The configurations that used for the recording, feel free to edit them
config:

  # Specify a command to be executed
  # like `/bin/bash -l`, `ls`, or any other commands
  # the default is bash for Linux
  # or powershell.exe for Windows
  command: bash -l
  
  # Specify the current working directory path
  # the default is the current working directory path
  cwd: /home
  
  # Export additional ENV variables
  env:
    recording: true
  
  # Explicitly set the number of columns
  # or use `auto` to take the current
  # number of columns of your shell
  cols: 93
  
  # Explicitly set the number of rows
  # or use `auto` to take the current
  # number of rows of your shell
  rows: 19
  
  # Amount of times to repeat GIF
  # If value is -1, play once
  # If value is 0, loop indefinitely
  # If value is a positive number, loop n times
  repeat: 0
  
  # Quality
  # 1 - 100
  quality: 100
  
  # Delay between frames in ms
  # If the value is `auto` use the actual recording delays
  frameDelay: auto
  
  # Maximum delay between frames in ms
  # Ignored if the `frameDelay` isn't set to `auto`
  # Set to `auto` to prevent limiting the max idle time
  maxIdleTime: 2000
  
  # The surrounding frame box
  # The `type` can be null, window, floating, or solid`
  # To hide the title use the value null
  # Don't forget to add a backgroundColor style with a null as type
  frameBox:
    type: floating
    title: terminal 
    style:
      border: 0px black solid
     
    # boxShadow: none
    # margin: 0px

  # Add a watermark image to the rendered gif
  # You need to specify an absolute path for
  # the image on your machine or a URL, and you can also
  # add your own CSS styles
  watermark:
    imagePath: null
    style:
      position: absolute
      right: 15px
      bottom: 15px
      width: 100px
      opacity: 0.9
  
  # Cursor style can be one of
  # `block`, `underline`, or `bar`
  cursorStyle: block
  
  # Font family
  # You can use any font that is installed on your machine
  # in CSS-like syntax
  fontFamily: "Monaco, Lucida Console, Ubuntu Mono, Monospace"
  
  # The size of the font
  fontSize: 12
  
  # The height of lines
  lineHeight: 1
  
  # The spacing between letters
  letterSpacing: 0
  
  # Theme
  theme:
    background: "transparent"
    foreground: "#afafaf"
    cursor: "#c7c7c7"
    black: "#232628"
    red: "#fc4384"
    green: "#b3e33b"
    yellow: "#ffa727"
    blue: "#75dff2"
    magenta: "#ae89fe"
    cyan: "#708387"
    white: "#d5d5d0"
    brightBlack: "#626566"
    brightRed: "#ff7fac"
    brightGreen: "#c8ed71"
    brightYellow: "#ebdf86"
    brightBlue: "#75dff2"
    brightMagenta: "#ae89fe"
    brightCyan: "#b1c6ca"
    brightWhite: "#f9f9f4"
  
# Records, feel free to edit them
      # content: "\e]0;racoon@space:~/Projects/pointy\a"
      # - delay: 6
      # - delay: 596
      # content: "\e[?2004h\e[01;32m[racoon@space\e[01;37m pointy\e[01;32m]\e[33m (main)$\e[00m "
      # content: "\e]0;racoon@space:~/Projects/pointy\a"
      # - delay: 6
      # ccontent: "\e[?2004h\e[01;32m[racoon@space\e[01;37m pointy\e[01;32m]\e[33m (main)$\e[00m "
records:
  - delay: 6
    content: "\r\e[01;32m[racoon@space\e[01;37m project\e[01;32m]\e[33m$\e[00m "
  - delay: 8102
    content: 'l'
  - delay: 109
    content: 's'
  - delay: 100
    content: ' '
  - delay: 894
    content: '|'
  - delay: 94
    content: ' '
  - delay: 1234
    content: c
  - delay: 163
    content: a
  - delay: 774
    content: 'n'
  - delay: 124
    content: 'n'
  - delay: 251
    content: 'y'
  - delay: 750
    content: "\r\n\e[?2004l\r"
  - delay: 123
    content: "\e[?1049h\e[22;0;0t\e[1;19r\e(B\e[m\e[4l\e[?7h\e[?1h\e=\e[39;49m\e[?1006;1004;1003h\e[?25l\e[39;49m\e(B\e[m\e[H\e[2J__pycache__\r\e[2dassets\r\e[3ddist\r\e[4dexamples\r\e[5dLICENSE\r\e[6dMakefile\r\e[7dpyproject.toml\r\e[8dREADME.md\r\e[9drequirements.txt\r\e[10dsrc\r\e[11dtestpack\r\e[12dtests\r\e[13dvenv\r\e[14d"
  - delay: 1914
    content: "\e[9d\e(B\e[0;4mrequirements.txt\e(B\e[m"
  - delay: 87
    content: "\rrequirements.txt\r\e[14d"
  - delay: 221
    content: "\e[9d\e(B\e[0;4mrequirements.txt\e(B\e[m"
  - delay: 7
    content: "\rrequirements.txt\r\e[14d\e[8d\e(B\e[0;4mREADME.md\e(B\e[m"
  - delay: 81
    content: "\rREADME.md\r\e[14d\e[7d\e(B\e[0;4mpyproject.toml\e(B\e[m"
  - delay: 117
    content: "\rpyproject.toml\r\e[14d\e[6d\e(B\e[0;4mMakefile\e(B\e[m"
  - delay: 125
    content: "\rMakefile\r\e[14d\e[5d\e(B\e[0;4mLICENSE\e(B\e[m"
  - delay: 1039
    content: "\e[?1l\e>\e[?1006;1004;1003l\e[19;1H\e[?12l\e[?25h\e[?1049l\e[23;0;0t\r\e[?1l\e>LICENSE\r\n"
  - delay: 34
    content: "\e]0;racoon@space:~\a"
  - delay: 9
    content: "\e[?2004h\e[01;32m[racoon@space\e[01;37m project\e[01;32m]\e[33m $\e[00m "
  - delay: 2000 
    content: " \r\n"
